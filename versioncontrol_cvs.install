<?php
// $Id$
/**
 * @file
 * CVS backend for Version Control API - Provides CVS commit information and
 * account management as a pluggable backend.
 *
 * Copyright 2006 by Karthik ("Zen", http://drupal.org/user/21209)
 * Copyright 2006, 2007 by Derek Wright ("dww", http://drupal.org/user/46549)
 * Copyright 2007, 2008, 2009 by Jakob Petsovits ("jpetso", http://drupal.org/user/56020)
 */

/**
 * Implementation of hook_install().
 */
function versioncontrol_cvs_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysqli':
    case 'mysql':
      db_query("CREATE TABLE {versioncontrol_cvs_accounts} (
        uid int unsigned NOT NULL default 0,
        repo_id int unsigned NOT NULL default 0,
        password varchar(64) NOT NULL default '',
        PRIMARY KEY (uid, repo_id)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");

      db_query("CREATE TABLE {versioncontrol_cvs_repositories} (
        repo_id int unsigned NOT NULL default 0,
        modules varchar(255) NOT NULL default '',
        update_method tinyint unsigned NOT NULL default 0,
        updated int unsigned NOT NULL default 0,
        run_as_user varchar(255) NOT NULL default '',
        PRIMARY KEY (repo_id)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {versioncontrol_cvs_accounts} (
        uid int NOT NULL default 0,
        repo_id int NOT NULL default 0,
        password varchar(64) NOT NULL default '',
        PRIMARY KEY (uid, repo_id)
      )");

      db_query("CREATE TABLE {versioncontrol_cvs_repositories} (
        repo_id int NOT NULL default 0,
        modules varchar(255) NOT NULL default '',
        update_method smallint NOT NULL default 0,
        updated int NOT NULL default 0,
        run_as_user varchar(255) NOT NULL default '',
        PRIMARY KEY (repo_id)
      )");
      break;
  }
}


/**
 * Implementation of hook_uninstall().
 */
function versioncontrol_cvs_uninstall() {
  // Make sure we can access the required functions even from the .install file.
  include_once(drupal_get_path('module', 'versioncontrol') .'/versioncontrol.module');
  include_once(drupal_get_path('module', 'versioncontrol_cvs') .'/versioncontrol_cvs.module');

  if (db_table_exists('versioncontrol_repositories')) {
    $result = db_query("SELECT repo_id FROM {versioncontrol_repositories}
                        WHERE vcs = 'cvs'");
    while ($repository = db_fetch_array($result)) {
      versioncontrol_delete_repository($repository);
    }
  }

  db_query('DROP TABLE {versioncontrol_cvs_accounts}');
  db_query('DROP TABLE {versioncontrol_cvs_repositories}');
}


// Update functions. To be named versioncontrol_cvs_update_xyzz(), where x is
// the major version of Drupal core, y is the major version of the CVS backend
// for this version of Drupal core, and zz is a consecutive number.

// versioncontrol_cvs_update_6() was the last update on Drupal 5.x (-2.x).

/**
 * Update 6100: Blah blah blah.
 */
/*function versioncontrol_cvs_update_6100() {
  $ret = array();
  $ret[] = update_sql('UPDATE {versioncontrol_cvs_blah} SET value = othervalue');
  return $ret;
}*/
